{"version":3,"sources":["api/users.ts","components/TodoInfo/TodoInfo.tsx","components/UserInfo/UserInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","TodoInfo","todo","className","title","UserInfo","user","href","TodoList","todos","map","classNames","completed","preparedTodos","userId","users","find","App","useState","setTitle","userName","setUserName","setTodos","isTitle","setIsTitle","isUserName","setIsUserName","action","method","onSubmit","event","preventDefault","newUser","newTodo","length","trim","type","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68c93d6a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n  );\n};\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={user.email}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <article\n          key={todo.id}\n          data-id=\"1\"\n          className={classNames(\n            'TodoInfo',\n            {\n              'TodoInfo--completed': todo.completed,\n            },\n          )}\n        >\n          <TodoInfo todo={todo} />\n          {todo.user && <UserInfo user={todo.user} />}\n        </article>\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\n\nimport users from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport { Todo } from './types/Todo';\n\nimport './App.scss';\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: users.find(user => user.id === todo.userId) || null,\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userName, setUserName] = useState('');\n  const [todos, setTodos] = useState(preparedTodos);\n  const [isTitle, setIsTitle] = useState(true);\n  const [isUserName, setIsUserName] = useState(true);\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setTitle(value);\n    setIsTitle(true);\n  };\n\n  const handleUserName = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setUserName(value);\n    setIsUserName(true);\n  };\n\n  const handleSubmit = (event: React.MouseEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title) {\n      setIsTitle(false);\n    }\n\n    if (!userName) {\n      setIsUserName(false);\n    }\n\n    if (title && userName) {\n      const newUser = users.find(user => user.name === userName) || null;\n      const newTodo = {\n        id: todos[todos.length - 1].id + 1,\n        title: title.trim(),\n        completed: false,\n        userId: newUser ? newUser.id : 0,\n        user: newUser,\n      };\n\n      setTodos([\n        ...todos,\n        newTodo,\n      ]);\n      setTitle('');\n      setUserName('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            value={title}\n            onChange={handleTitle}\n            data-cy=\"titleInput\"\n          />\n          {!isTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            value={userName}\n            onChange={handleUserName}\n            data-cy=\"userSelect\"\n          >\n            <option value=\"0\">Choose a user</option>\n\n            {users.map(user => (\n              <option\n                key={user.id}\n                value={user.name}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {!isUserName && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}